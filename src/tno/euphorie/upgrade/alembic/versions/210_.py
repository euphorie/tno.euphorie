"""empty message

Revision ID: 210
Revises: 204
Create Date: 2021-06-15 18:22:52.081917

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '210'
down_revision = '204'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('action_plan', sa.Column('action', sa.UnicodeText(), nullable=True))
    op.add_column('action_plan', sa.Column('plan_type', sa.String(length=20), nullable=True))
    op.add_column('action_plan', sa.Column('solution_id', sa.Unicode(length=20), nullable=True))
    op.add_column('action_plan', sa.Column('used_in_training', sa.Boolean(), nullable=True))
    op.create_index(op.f('ix_action_plan_plan_type'), 'action_plan', ['plan_type'], unique=False)
    op.create_index(op.f('ix_action_plan_used_in_training'), 'action_plan', ['used_in_training'], unique=False)
    op.add_column('company', sa.Column('timestamp', sa.DateTime(), nullable=True))
    op.add_column('group', sa.Column('active', sa.Boolean(), nullable=True))
    op.add_column('session', sa.Column('migrated', sa.DateTime(), nullable=True))
    op.execute("UPDATE action_plan SET plan_type = 'measure_custom'")
    op.execute(
        """
UPDATE action_plan ap
    SET "action" = CASE
    WHEN ap.prevention_plan is not NULL
    THEN ap.action_plan || E'\n' || ap.prevention_plan
    ELSE ap.action_plan END"""
    )
    op.alter_column("action_plan", "plan_type", nullable=False)
    op.alter_column('session', 'refreshed',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_index('tree_zodb_path', 'tree', ['session_id', 'profile_index', 'zodb_path'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'tree', type_='unique')
    op.drop_constraint(None, 'tree', type_='unique')
    op.drop_index('tree_zodb_path', table_name='tree')
    op.alter_column('session', 'refreshed',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('session', 'migrated')
    op.drop_column('group', 'active')
    op.drop_column('company', 'timestamp')
    op.drop_index(op.f('ix_action_plan_used_in_training'), table_name='action_plan')
    op.drop_index(op.f('ix_action_plan_plan_type'), table_name='action_plan')
    op.drop_column('action_plan', 'used_in_training')
    op.drop_column('action_plan', 'solution_id')
    op.drop_column('action_plan', 'plan_type')
    op.drop_column('action_plan', 'action')
    # ### end Alembic commands ###
